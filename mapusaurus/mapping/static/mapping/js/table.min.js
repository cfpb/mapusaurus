!function($) {
    "use strict";
    var ts = $.tablesorter;
    ts.addWidget({
        id: "sortTbody",
        priority: 100,
        options: {
            sortTbody_primaryCell: null,
            sortTbody_type: "Natural"
        },
        init: function(table, thisWidget, c, wo) {
            var tbodies = c.$table.children('tbody:not(".tablesorter-childTbody, .tablesorter-infoOnly")'), tbodyChildren = {};
            tbodies.each(function(i, t) {
                var $t = $(t);
                $t.data("rowid", i), tbodyChildren[i] = $t.next(".tablesorter-childTbody");
            }), c.$table.unbind("sortEnd.sortTbody").bind("sortEnd.sortTbody", function() {
                var tbl = ("text" === wo.sortTbody_type.toLowerCase() ? "sortText" : "sortNatural", 
                c.$table), method = "sortNatural", sortedBy = tbl.find('th[aria-sort="ascending"], th[aria-sort="descending"]'), direction = "ascending" == sortedBy.attr("aria-sort") ? 0 : 1, colCl = $(sortedBy).data("sortclass");
                tbodies.sort(function(a, b) {
                    var $a = $(direction ? b : a), $b = $(direction ? a : b);
                    return ts[method]($a.find("tr:first ." + colCl).text(), $b.find("tr:first ." + colCl).text());
                }), c.$table.hide(), tbodies.each(function(i, t) {
                    var $t = $(t);
                    $t.appendTo(c.$table), $(tbodyChildren[$t.data("rowid")]).appendTo(c.$table);
                }), c.$table.show();
            });
        },
        remove: function(table, c) {
            c.$table.unbind("sortEnd.sortTbody");
        }
    });
}(jQuery), $(document).ready(function() {
    function getTableData() {
        var params = {}, endpoint = "/api/tables/";
        return urlParam("lender") ? (params.lender = urlParam("lender"), urlParam("metro") ? params.metro = urlParam("metro") : console.log("No metro area provided"), 
        $.ajax({
            url: endpoint,
            data: params,
            traditional: !0,
            success: console.log("get API All Data request successful")
        }).fail(function(status) {
            console.log("no data was available at" + endpoint + ". status: " + status);
        }).done(function(res) {
            tableData = res.table_data, prepTableData(tableData);
        })) : (console.log(" Lender parameter is required."), !1);
    }
    function prepNumbers(data) {
        _.each([ "lma_pct", "mma_pct", "hma_pct" ], function(i) {
            var num = parseFloat(data[i]);
            isNaN(num) || (data[i] = +(100 * num).toFixed(2));
        });
    }
    function prepTableData(tableData) {
        _.each([ tableData.lender, tableData.peers ], function(i) {
            prepNumbers(i);
        }), _.each(tableData.counties, function(c) {
            prepNumbers(c), _.each((c || {}).tracts, function(t) {
                prepNumbers(t);
            });
        });
    }
    function buildTable(showPeers) {
        console.log("table3!"), msaData.done(function() {
            var msa = tableData.lender;
            msa.peers = tableData.peers, msa.odds = tableData.odds, msa.counties = tableData.counties, 
            console.log(tableData);
            var template, tbl;
            _.templateSettings.variable = "msa", msa.showPeers = showPeers, template = _.template($("script.table-template").html()), 
            tbl = $(template(msa)), $("#table-container").append(tbl);
        });
    }
    function activateTable() {
        var tbl = $(".summary-data-table");
        tbl.tablesorter({
            headerTemplate: "",
            widgets: [ "sortTbody", "stickyHeaders" ],
            widgetOptions: {
                stickyHeaders_attachTo: "#data-container"
            }
        }), $(".tablesorter-childTbody").hide(), $(".county-tbody").click(function(e) {
            var $target = $(e.target), $tbody = $target.closest("tbody"), child = $tbody.next(".tablesorter-childTbody");
            $(child).is(":visible") ? ($(child).hide(), $tbody.find(".expandable_cue-open").show(), 
            $tbody.find(".expandable_cue-close").hide()) : ($(child).show(), $tbody.find(".expandable_cue-open").hide(), 
            $tbody.find(".expandable_cue-close").show());
        }), tbl.show(), $("#table-container").show();
    }
    function destroyData() {
        "chart-toggle__basic-table" == currentChart || "chart-toggle__peer-table" == currentChart ? ($(".summary-data-table").trigger("destroy"), 
        $(".summary-data-table").remove(), $("#table-container").hide()) : "chart-toggle__lar-chart" === currentChart && (destroyLarChart(), 
        $("#plot-container").hide());
    }
    function hideData() {
        currentChart && (destroyData(), showDataContainer = !1, $("#data-container").hide(), 
        currentChart = null, setMapHeight());
    }
    var currentChart, tableData = {};
    window.partial = function(which, data) {
        var tmpl = $("." + which).html();
        return _.template(tmpl)(data);
    };
    var msaData = getTableData();
    $(".chart-toggle").click(function(e) {
        var $target = $(e.target).closest(".chart-toggle"), id = $target.attr("id");
        currentChart != id ? (currentChart && destroyData(), showDataContainer = !0, "chart-toggle__basic-table" === id || "chart-toggle__peer-table" === id ? (buildTable("chart-toggle__peer-table" === id), 
        activateTable(), $("#table-container").fadeIn()) : "chart-toggle__lar-chart" === id && (plotLarVolume(), 
        $("#plot-container").show()), currentChart = id, $("#data-container").show(), setMapHeight()) : hideData();
    }), $("#map-aside-header__tablist a:not(#tablist-map-aside__msa-details)").click(function() {
        hideData();
    });
});
function getHashParams() {
    for (var e, hashParams = {}, a = /\+/g, r = /([^!&;=<>]+)(!?[=><]?)([^&;]*)/g, d = function(s) {
        return decodeURIComponent(s.replace(a, " "));
    }, q = window.location.hash.substring(1).replace(/^!\/?/, ""); e = r.exec(q); ) hashParams[d(e[1])] = {
        values: d(e[3]),
        comparator: d(e[2])
    };
    return hashParams;
}

function updateUrlHash(params) {
    function buildHashParam(param, name) {
        hashParams.push(name + "=" + param.values);
    }
    var newHash, hashParams = [];
    _.forEach(params, buildHashParam), newHash = "&" + hashParams.join("&"), window.location.hash = newHash;
}

function addParam(paramName, values) {
    var params = getHashParams();
    params[paramName] = {}, params[paramName].values = values, params[paramName].comparator = "=", 
    updateUrlHash(params);
}

(function() {
    var root = this, previousUnderscore = root._, ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype, push = ArrayProto.push, slice = ArrayProto.slice, concat = ArrayProto.concat, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty, nativeIsArray = Array.isArray, nativeKeys = Object.keys, nativeBind = FuncProto.bind, _ = function(obj) {
        return obj instanceof _ ? obj : this instanceof _ ? void (this._wrapped = obj) : new _(obj);
    };
    "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = _), 
    exports._ = _) : root._ = _, _.VERSION = "1.7.0";
    var createCallback = function(func, context, argCount) {
        if (void 0 === context) return func;
        switch (null == argCount ? 3 : argCount) {
          case 1:
            return function(value) {
                return func.call(context, value);
            };

          case 2:
            return function(value, other) {
                return func.call(context, value, other);
            };

          case 3:
            return function(value, index, collection) {
                return func.call(context, value, index, collection);
            };

          case 4:
            return function(accumulator, value, index, collection) {
                return func.call(context, accumulator, value, index, collection);
            };
        }
        return function() {
            return func.apply(context, arguments);
        };
    };
    _.iteratee = function(value, context, argCount) {
        return null == value ? _.identity : _.isFunction(value) ? createCallback(value, context, argCount) : _.isObject(value) ? _.matches(value) : _.property(value);
    }, _.each = _.forEach = function(obj, iteratee, context) {
        if (null == obj) return obj;
        iteratee = createCallback(iteratee, context);
        var i, length = obj.length;
        if (length === +length) for (i = 0; length > i; i++) iteratee(obj[i], i, obj); else {
            var keys = _.keys(obj);
            for (i = 0, length = keys.length; length > i; i++) iteratee(obj[keys[i]], keys[i], obj);
        }
        return obj;
    }, _.map = _.collect = function(obj, iteratee, context) {
        if (null == obj) return [];
        iteratee = _.iteratee(iteratee, context);
        for (var currentKey, keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length, results = Array(length), index = 0; length > index; index++) currentKey = keys ? keys[index] : index, 
        results[index] = iteratee(obj[currentKey], currentKey, obj);
        return results;
    };
    var reduceError = "Reduce of empty array with no initial value";
    _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {
        null == obj && (obj = []), iteratee = createCallback(iteratee, context, 4);
        var currentKey, keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length, index = 0;
        if (arguments.length < 3) {
            if (!length) throw new TypeError(reduceError);
            memo = obj[keys ? keys[index++] : index++];
        }
        for (;length > index; index++) currentKey = keys ? keys[index] : index, memo = iteratee(memo, obj[currentKey], currentKey, obj);
        return memo;
    }, _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {
        null == obj && (obj = []), iteratee = createCallback(iteratee, context, 4);
        var currentKey, keys = obj.length !== +obj.length && _.keys(obj), index = (keys || obj).length;
        if (arguments.length < 3) {
            if (!index) throw new TypeError(reduceError);
            memo = obj[keys ? keys[--index] : --index];
        }
        for (;index--; ) currentKey = keys ? keys[index] : index, memo = iteratee(memo, obj[currentKey], currentKey, obj);
        return memo;
    }, _.find = _.detect = function(obj, predicate, context) {
        var result;
        return predicate = _.iteratee(predicate, context), _.some(obj, function(value, index, list) {
            return predicate(value, index, list) ? (result = value, !0) : void 0;
        }), result;
    }, _.filter = _.select = function(obj, predicate, context) {
        var results = [];
        return null == obj ? results : (predicate = _.iteratee(predicate, context), _.each(obj, function(value, index, list) {
            predicate(value, index, list) && results.push(value);
        }), results);
    }, _.reject = function(obj, predicate, context) {
        return _.filter(obj, _.negate(_.iteratee(predicate)), context);
    }, _.every = _.all = function(obj, predicate, context) {
        if (null == obj) return !0;
        predicate = _.iteratee(predicate, context);
        var index, currentKey, keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length;
        for (index = 0; length > index; index++) if (currentKey = keys ? keys[index] : index, 
        !predicate(obj[currentKey], currentKey, obj)) return !1;
        return !0;
    }, _.some = _.any = function(obj, predicate, context) {
        if (null == obj) return !1;
        predicate = _.iteratee(predicate, context);
        var index, currentKey, keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length;
        for (index = 0; length > index; index++) if (currentKey = keys ? keys[index] : index, 
        predicate(obj[currentKey], currentKey, obj)) return !0;
        return !1;
    }, _.contains = _.include = function(obj, target) {
        return null == obj ? !1 : (obj.length !== +obj.length && (obj = _.values(obj)), 
        _.indexOf(obj, target) >= 0);
    }, _.invoke = function(obj, method) {
        var args = slice.call(arguments, 2), isFunc = _.isFunction(method);
        return _.map(obj, function(value) {
            return (isFunc ? method : value[method]).apply(value, args);
        });
    }, _.pluck = function(obj, key) {
        return _.map(obj, _.property(key));
    }, _.where = function(obj, attrs) {
        return _.filter(obj, _.matches(attrs));
    }, _.findWhere = function(obj, attrs) {
        return _.find(obj, _.matches(attrs));
    }, _.max = function(obj, iteratee, context) {
        var value, computed, result = -1/0, lastComputed = -1/0;
        if (null == iteratee && null != obj) {
            obj = obj.length === +obj.length ? obj : _.values(obj);
            for (var i = 0, length = obj.length; length > i; i++) value = obj[i], value > result && (result = value);
        } else iteratee = _.iteratee(iteratee, context), _.each(obj, function(value, index, list) {
            computed = iteratee(value, index, list), (computed > lastComputed || computed === -1/0 && result === -1/0) && (result = value, 
            lastComputed = computed);
        });
        return result;
    }, _.min = function(obj, iteratee, context) {
        var value, computed, result = 1/0, lastComputed = 1/0;
        if (null == iteratee && null != obj) {
            obj = obj.length === +obj.length ? obj : _.values(obj);
            for (var i = 0, length = obj.length; length > i; i++) value = obj[i], result > value && (result = value);
        } else iteratee = _.iteratee(iteratee, context), _.each(obj, function(value, index, list) {
            computed = iteratee(value, index, list), (lastComputed > computed || 1/0 === computed && 1/0 === result) && (result = value, 
            lastComputed = computed);
        });
        return result;
    }, _.shuffle = function(obj) {
        for (var rand, set = obj && obj.length === +obj.length ? obj : _.values(obj), length = set.length, shuffled = Array(length), index = 0; length > index; index++) rand = _.random(0, index), 
        rand !== index && (shuffled[index] = shuffled[rand]), shuffled[rand] = set[index];
        return shuffled;
    }, _.sample = function(obj, n, guard) {
        return null == n || guard ? (obj.length !== +obj.length && (obj = _.values(obj)), 
        obj[_.random(obj.length - 1)]) : _.shuffle(obj).slice(0, Math.max(0, n));
    }, _.sortBy = function(obj, iteratee, context) {
        return iteratee = _.iteratee(iteratee, context), _.pluck(_.map(obj, function(value, index, list) {
            return {
                value: value,
                index: index,
                criteria: iteratee(value, index, list)
            };
        }).sort(function(left, right) {
            var a = left.criteria, b = right.criteria;
            if (a !== b) {
                if (a > b || void 0 === a) return 1;
                if (b > a || void 0 === b) return -1;
            }
            return left.index - right.index;
        }), "value");
    };
    var group = function(behavior) {
        return function(obj, iteratee, context) {
            var result = {};
            return iteratee = _.iteratee(iteratee, context), _.each(obj, function(value, index) {
                var key = iteratee(value, index, obj);
                behavior(result, value, key);
            }), result;
        };
    };
    _.groupBy = group(function(result, value, key) {
        _.has(result, key) ? result[key].push(value) : result[key] = [ value ];
    }), _.indexBy = group(function(result, value, key) {
        result[key] = value;
    }), _.countBy = group(function(result, value, key) {
        _.has(result, key) ? result[key]++ : result[key] = 1;
    }), _.sortedIndex = function(array, obj, iteratee, context) {
        iteratee = _.iteratee(iteratee, context, 1);
        for (var value = iteratee(obj), low = 0, high = array.length; high > low; ) {
            var mid = low + high >>> 1;
            iteratee(array[mid]) < value ? low = mid + 1 : high = mid;
        }
        return low;
    }, _.toArray = function(obj) {
        return obj ? _.isArray(obj) ? slice.call(obj) : obj.length === +obj.length ? _.map(obj, _.identity) : _.values(obj) : [];
    }, _.size = function(obj) {
        return null == obj ? 0 : obj.length === +obj.length ? obj.length : _.keys(obj).length;
    }, _.partition = function(obj, predicate, context) {
        predicate = _.iteratee(predicate, context);
        var pass = [], fail = [];
        return _.each(obj, function(value, key, obj) {
            (predicate(value, key, obj) ? pass : fail).push(value);
        }), [ pass, fail ];
    }, _.first = _.head = _.take = function(array, n, guard) {
        return null == array ? void 0 : null == n || guard ? array[0] : 0 > n ? [] : slice.call(array, 0, n);
    }, _.initial = function(array, n, guard) {
        return slice.call(array, 0, Math.max(0, array.length - (null == n || guard ? 1 : n)));
    }, _.last = function(array, n, guard) {
        return null == array ? void 0 : null == n || guard ? array[array.length - 1] : slice.call(array, Math.max(array.length - n, 0));
    }, _.rest = _.tail = _.drop = function(array, n, guard) {
        return slice.call(array, null == n || guard ? 1 : n);
    }, _.compact = function(array) {
        return _.filter(array, _.identity);
    };
    var flatten = function(input, shallow, strict, output) {
        if (shallow && _.every(input, _.isArray)) return concat.apply(output, input);
        for (var i = 0, length = input.length; length > i; i++) {
            var value = input[i];
            _.isArray(value) || _.isArguments(value) ? shallow ? push.apply(output, value) : flatten(value, shallow, strict, output) : strict || output.push(value);
        }
        return output;
    };
    _.flatten = function(array, shallow) {
        return flatten(array, shallow, !1, []);
    }, _.without = function(array) {
        return _.difference(array, slice.call(arguments, 1));
    }, _.uniq = _.unique = function(array, isSorted, iteratee, context) {
        if (null == array) return [];
        _.isBoolean(isSorted) || (context = iteratee, iteratee = isSorted, isSorted = !1), 
        null != iteratee && (iteratee = _.iteratee(iteratee, context));
        for (var result = [], seen = [], i = 0, length = array.length; length > i; i++) {
            var value = array[i];
            if (isSorted) i && seen === value || result.push(value), seen = value; else if (iteratee) {
                var computed = iteratee(value, i, array);
                _.indexOf(seen, computed) < 0 && (seen.push(computed), result.push(value));
            } else _.indexOf(result, value) < 0 && result.push(value);
        }
        return result;
    }, _.union = function() {
        return _.uniq(flatten(arguments, !0, !0, []));
    }, _.intersection = function(array) {
        if (null == array) return [];
        for (var result = [], argsLength = arguments.length, i = 0, length = array.length; length > i; i++) {
            var item = array[i];
            if (!_.contains(result, item)) {
                for (var j = 1; argsLength > j && _.contains(arguments[j], item); j++) ;
                j === argsLength && result.push(item);
            }
        }
        return result;
    }, _.difference = function(array) {
        var rest = flatten(slice.call(arguments, 1), !0, !0, []);
        return _.filter(array, function(value) {
            return !_.contains(rest, value);
        });
    }, _.zip = function(array) {
        if (null == array) return [];
        for (var length = _.max(arguments, "length").length, results = Array(length), i = 0; length > i; i++) results[i] = _.pluck(arguments, i);
        return results;
    }, _.object = function(list, values) {
        if (null == list) return {};
        for (var result = {}, i = 0, length = list.length; length > i; i++) values ? result[list[i]] = values[i] : result[list[i][0]] = list[i][1];
        return result;
    }, _.indexOf = function(array, item, isSorted) {
        if (null == array) return -1;
        var i = 0, length = array.length;
        if (isSorted) {
            if ("number" != typeof isSorted) return i = _.sortedIndex(array, item), array[i] === item ? i : -1;
            i = 0 > isSorted ? Math.max(0, length + isSorted) : isSorted;
        }
        for (;length > i; i++) if (array[i] === item) return i;
        return -1;
    }, _.lastIndexOf = function(array, item, from) {
        if (null == array) return -1;
        var idx = array.length;
        for ("number" == typeof from && (idx = 0 > from ? idx + from + 1 : Math.min(idx, from + 1)); --idx >= 0; ) if (array[idx] === item) return idx;
        return -1;
    }, _.range = function(start, stop, step) {
        arguments.length <= 1 && (stop = start || 0, start = 0), step = step || 1;
        for (var length = Math.max(Math.ceil((stop - start) / step), 0), range = Array(length), idx = 0; length > idx; idx++, 
        start += step) range[idx] = start;
        return range;
    };
    var Ctor = function() {};
    _.bind = function(func, context) {
        var args, bound;
        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
        if (!_.isFunction(func)) throw new TypeError("Bind must be called on a function");
        return args = slice.call(arguments, 2), bound = function() {
            if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
            Ctor.prototype = func.prototype;
            var self = new Ctor();
            Ctor.prototype = null;
            var result = func.apply(self, args.concat(slice.call(arguments)));
            return _.isObject(result) ? result : self;
        };
    }, _.partial = function(func) {
        var boundArgs = slice.call(arguments, 1);
        return function() {
            for (var position = 0, args = boundArgs.slice(), i = 0, length = args.length; length > i; i++) args[i] === _ && (args[i] = arguments[position++]);
            for (;position < arguments.length; ) args.push(arguments[position++]);
            return func.apply(this, args);
        };
    }, _.bindAll = function(obj) {
        var i, key, length = arguments.length;
        if (1 >= length) throw new Error("bindAll must be passed function names");
        for (i = 1; length > i; i++) key = arguments[i], obj[key] = _.bind(obj[key], obj);
        return obj;
    }, _.memoize = function(func, hasher) {
        var memoize = function(key) {
            var cache = memoize.cache, address = hasher ? hasher.apply(this, arguments) : key;
            return _.has(cache, address) || (cache[address] = func.apply(this, arguments)), 
            cache[address];
        };
        return memoize.cache = {}, memoize;
    }, _.delay = function(func, wait) {
        var args = slice.call(arguments, 2);
        return setTimeout(function() {
            return func.apply(null, args);
        }, wait);
    }, _.defer = function(func) {
        return _.delay.apply(_, [ func, 1 ].concat(slice.call(arguments, 1)));
    }, _.throttle = function(func, wait, options) {
        var context, args, result, timeout = null, previous = 0;
        options || (options = {});
        var later = function() {
            previous = options.leading === !1 ? 0 : _.now(), timeout = null, result = func.apply(context, args), 
            timeout || (context = args = null);
        };
        return function() {
            var now = _.now();
            previous || options.leading !== !1 || (previous = now);
            var remaining = wait - (now - previous);
            return context = this, args = arguments, 0 >= remaining || remaining > wait ? (clearTimeout(timeout), 
            timeout = null, previous = now, result = func.apply(context, args), timeout || (context = args = null)) : timeout || options.trailing === !1 || (timeout = setTimeout(later, remaining)), 
            result;
        };
    }, _.debounce = function(func, wait, immediate) {
        var timeout, args, context, timestamp, result, later = function() {
            var last = _.now() - timestamp;
            wait > last && last > 0 ? timeout = setTimeout(later, wait - last) : (timeout = null, 
            immediate || (result = func.apply(context, args), timeout || (context = args = null)));
        };
        return function() {
            context = this, args = arguments, timestamp = _.now();
            var callNow = immediate && !timeout;
            return timeout || (timeout = setTimeout(later, wait)), callNow && (result = func.apply(context, args), 
            context = args = null), result;
        };
    }, _.wrap = function(func, wrapper) {
        return _.partial(wrapper, func);
    }, _.negate = function(predicate) {
        return function() {
            return !predicate.apply(this, arguments);
        };
    }, _.compose = function() {
        var args = arguments, start = args.length - 1;
        return function() {
            for (var i = start, result = args[start].apply(this, arguments); i--; ) result = args[i].call(this, result);
            return result;
        };
    }, _.after = function(times, func) {
        return function() {
            return --times < 1 ? func.apply(this, arguments) : void 0;
        };
    }, _.before = function(times, func) {
        var memo;
        return function() {
            return --times > 0 ? memo = func.apply(this, arguments) : func = null, memo;
        };
    }, _.once = _.partial(_.before, 2), _.keys = function(obj) {
        if (!_.isObject(obj)) return [];
        if (nativeKeys) return nativeKeys(obj);
        var keys = [];
        for (var key in obj) _.has(obj, key) && keys.push(key);
        return keys;
    }, _.values = function(obj) {
        for (var keys = _.keys(obj), length = keys.length, values = Array(length), i = 0; length > i; i++) values[i] = obj[keys[i]];
        return values;
    }, _.pairs = function(obj) {
        for (var keys = _.keys(obj), length = keys.length, pairs = Array(length), i = 0; length > i; i++) pairs[i] = [ keys[i], obj[keys[i]] ];
        return pairs;
    }, _.invert = function(obj) {
        for (var result = {}, keys = _.keys(obj), i = 0, length = keys.length; length > i; i++) result[obj[keys[i]]] = keys[i];
        return result;
    }, _.functions = _.methods = function(obj) {
        var names = [];
        for (var key in obj) _.isFunction(obj[key]) && names.push(key);
        return names.sort();
    }, _.extend = function(obj) {
        if (!_.isObject(obj)) return obj;
        for (var source, prop, i = 1, length = arguments.length; length > i; i++) {
            source = arguments[i];
            for (prop in source) hasOwnProperty.call(source, prop) && (obj[prop] = source[prop]);
        }
        return obj;
    }, _.pick = function(obj, iteratee, context) {
        var key, result = {};
        if (null == obj) return result;
        if (_.isFunction(iteratee)) {
            iteratee = createCallback(iteratee, context);
            for (key in obj) {
                var value = obj[key];
                iteratee(value, key, obj) && (result[key] = value);
            }
        } else {
            var keys = concat.apply([], slice.call(arguments, 1));
            obj = new Object(obj);
            for (var i = 0, length = keys.length; length > i; i++) key = keys[i], key in obj && (result[key] = obj[key]);
        }
        return result;
    }, _.omit = function(obj, iteratee, context) {
        if (_.isFunction(iteratee)) iteratee = _.negate(iteratee); else {
            var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);
            iteratee = function(value, key) {
                return !_.contains(keys, key);
            };
        }
        return _.pick(obj, iteratee, context);
    }, _.defaults = function(obj) {
        if (!_.isObject(obj)) return obj;
        for (var i = 1, length = arguments.length; length > i; i++) {
            var source = arguments[i];
            for (var prop in source) void 0 === obj[prop] && (obj[prop] = source[prop]);
        }
        return obj;
    }, _.clone = function(obj) {
        return _.isObject(obj) ? _.isArray(obj) ? obj.slice() : _.extend({}, obj) : obj;
    }, _.tap = function(obj, interceptor) {
        return interceptor(obj), obj;
    };
    var eq = function(a, b, aStack, bStack) {
        if (a === b) return 0 !== a || 1 / a === 1 / b;
        if (null == a || null == b) return a === b;
        a instanceof _ && (a = a._wrapped), b instanceof _ && (b = b._wrapped);
        var className = toString.call(a);
        if (className !== toString.call(b)) return !1;
        switch (className) {
          case "[object RegExp]":
          case "[object String]":
            return "" + a == "" + b;

          case "[object Number]":
            return +a !== +a ? +b !== +b : 0 === +a ? 1 / +a === 1 / b : +a === +b;

          case "[object Date]":
          case "[object Boolean]":
            return +a === +b;
        }
        if ("object" != typeof a || "object" != typeof b) return !1;
        for (var length = aStack.length; length--; ) if (aStack[length] === a) return bStack[length] === b;
        var aCtor = a.constructor, bCtor = b.constructor;
        if (aCtor !== bCtor && "constructor" in a && "constructor" in b && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) return !1;
        aStack.push(a), bStack.push(b);
        var size, result;
        if ("[object Array]" === className) {
            if (size = a.length, result = size === b.length) for (;size-- && (result = eq(a[size], b[size], aStack, bStack)); ) ;
        } else {
            var key, keys = _.keys(a);
            if (size = keys.length, result = _.keys(b).length === size) for (;size-- && (key = keys[size], 
            result = _.has(b, key) && eq(a[key], b[key], aStack, bStack)); ) ;
        }
        return aStack.pop(), bStack.pop(), result;
    };
    _.isEqual = function(a, b) {
        return eq(a, b, [], []);
    }, _.isEmpty = function(obj) {
        if (null == obj) return !0;
        if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return 0 === obj.length;
        for (var key in obj) if (_.has(obj, key)) return !1;
        return !0;
    }, _.isElement = function(obj) {
        return !(!obj || 1 !== obj.nodeType);
    }, _.isArray = nativeIsArray || function(obj) {
        return "[object Array]" === toString.call(obj);
    }, _.isObject = function(obj) {
        var type = typeof obj;
        return "function" === type || "object" === type && !!obj;
    }, _.each([ "Arguments", "Function", "String", "Number", "Date", "RegExp" ], function(name) {
        _["is" + name] = function(obj) {
            return toString.call(obj) === "[object " + name + "]";
        };
    }), _.isArguments(arguments) || (_.isArguments = function(obj) {
        return _.has(obj, "callee");
    }), "function" != typeof /./ && (_.isFunction = function(obj) {
        return "function" == typeof obj || !1;
    }), _.isFinite = function(obj) {
        return isFinite(obj) && !isNaN(parseFloat(obj));
    }, _.isNaN = function(obj) {
        return _.isNumber(obj) && obj !== +obj;
    }, _.isBoolean = function(obj) {
        return obj === !0 || obj === !1 || "[object Boolean]" === toString.call(obj);
    }, _.isNull = function(obj) {
        return null === obj;
    }, _.isUndefined = function(obj) {
        return void 0 === obj;
    }, _.has = function(obj, key) {
        return null != obj && hasOwnProperty.call(obj, key);
    }, _.noConflict = function() {
        return root._ = previousUnderscore, this;
    }, _.identity = function(value) {
        return value;
    }, _.constant = function(value) {
        return function() {
            return value;
        };
    }, _.noop = function() {}, _.property = function(key) {
        return function(obj) {
            return obj[key];
        };
    }, _.matches = function(attrs) {
        var pairs = _.pairs(attrs), length = pairs.length;
        return function(obj) {
            if (null == obj) return !length;
            obj = new Object(obj);
            for (var i = 0; length > i; i++) {
                var pair = pairs[i], key = pair[0];
                if (pair[1] !== obj[key] || !(key in obj)) return !1;
            }
            return !0;
        };
    }, _.times = function(n, iteratee, context) {
        var accum = Array(Math.max(0, n));
        iteratee = createCallback(iteratee, context, 1);
        for (var i = 0; n > i; i++) accum[i] = iteratee(i);
        return accum;
    }, _.random = function(min, max) {
        return null == max && (max = min, min = 0), min + Math.floor(Math.random() * (max - min + 1));
    }, _.now = Date.now || function() {
        return new Date().getTime();
    };
    var escapeMap = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#x27;",
        "`": "&#x60;"
    }, unescapeMap = _.invert(escapeMap), createEscaper = function(map) {
        var escaper = function(match) {
            return map[match];
        }, source = "(?:" + _.keys(map).join("|") + ")", testRegexp = RegExp(source), replaceRegexp = RegExp(source, "g");
        return function(string) {
            return string = null == string ? "" : "" + string, testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
        };
    };
    _.escape = createEscaper(escapeMap), _.unescape = createEscaper(unescapeMap), _.result = function(object, property) {
        if (null == object) return void 0;
        var value = object[property];
        return _.isFunction(value) ? object[property]() : value;
    };
    var idCounter = 0;
    _.uniqueId = function(prefix) {
        var id = ++idCounter + "";
        return prefix ? prefix + id : id;
    }, _.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var noMatch = /(.)^/, escapes = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "\u2028": "u2028",
        "\u2029": "u2029"
    }, escaper = /\\|'|\r|\n|\u2028|\u2029/g, escapeChar = function(match) {
        return "\\" + escapes[match];
    };
    _.template = function(text, settings, oldSettings) {
        !settings && oldSettings && (settings = oldSettings), settings = _.defaults({}, settings, _.templateSettings);
        var matcher = RegExp([ (settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source ].join("|") + "|$", "g"), index = 0, source = "__p+='";
        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
            return source += text.slice(index, offset).replace(escaper, escapeChar), index = offset + match.length, 
            escape ? source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'" : interpolate ? source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'" : evaluate && (source += "';\n" + evaluate + "\n__p+='"), 
            match;
        }), source += "';\n", settings.variable || (source = "with(obj||{}){\n" + source + "}\n"), 
        source = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + source + "return __p;\n";
        try {
            var render = new Function(settings.variable || "obj", "_", source);
        } catch (e) {
            throw e.source = source, e;
        }
        var template = function(data) {
            return render.call(this, data, _);
        }, argument = settings.variable || "obj";
        return template.source = "function(" + argument + "){\n" + source + "}", template;
    }, _.chain = function(obj) {
        var instance = _(obj);
        return instance._chain = !0, instance;
    };
    var result = function(obj) {
        return this._chain ? _(obj).chain() : obj;
    };
    _.mixin = function(obj) {
        _.each(_.functions(obj), function(name) {
            var func = _[name] = obj[name];
            _.prototype[name] = function() {
                var args = [ this._wrapped ];
                return push.apply(args, arguments), result.call(this, func.apply(_, args));
            };
        });
    }, _.mixin(_), _.each([ "pop", "push", "reverse", "shift", "sort", "splice", "unshift" ], function(name) {
        var method = ArrayProto[name];
        _.prototype[name] = function() {
            var obj = this._wrapped;
            return method.apply(obj, arguments), "shift" !== name && "splice" !== name || 0 !== obj.length || delete obj[0], 
            result.call(this, obj);
        };
    }), _.each([ "concat", "join", "slice" ], function(name) {
        var method = ArrayProto[name];
        _.prototype[name] = function() {
            return result.call(this, method.apply(this._wrapped, arguments));
        };
    }), _.prototype.value = function() {
        return this._wrapped;
    }, "function" == typeof define && define.amd && define("underscore", [], function() {
        return _;
    });
}).call(this), function() {
    "use strict";
    function setup($) {
        function install(el, opts) {
            var css, themedCSS, full = el == window, msg = opts && void 0 !== opts.message ? opts.message : void 0;
            if (opts = $.extend({}, $.blockUI.defaults, opts || {}), !opts.ignoreIfBlocked || !$(el).data("blockUI.isBlocked")) {
                if (opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {}), 
                css = $.extend({}, $.blockUI.defaults.css, opts.css || {}), opts.onOverlayClick && (opts.overlayCSS.cursor = "pointer"), 
                themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {}), msg = void 0 === msg ? opts.message : msg, 
                full && pageBlock && remove(window, {
                    fadeOut: 0
                }), msg && "string" != typeof msg && (msg.parentNode || msg.jquery)) {
                    var node = msg.jquery ? msg[0] : msg, data = {};
                    $(el).data("blockUI.history", data), data.el = node, data.parent = node.parentNode, 
                    data.display = node.style.display, data.position = node.style.position, data.parent && data.parent.removeChild(node);
                }
                $(el).data("blockUI.onUnblock", opts.onUnblock);
                var lyr1, lyr2, lyr3, s, z = opts.baseZ;
                lyr1 = $(msie || opts.forceIframe ? '<iframe class="blockUI" style="z-index:' + z++ + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + opts.iframeSrc + '"></iframe>' : '<div class="blockUI" style="display:none"></div>'), 
                lyr2 = $(opts.theme ? '<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + z++ + ';display:none"></div>' : '<div class="blockUI blockOverlay" style="z-index:' + z++ + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>'), 
                opts.theme && full ? (s = '<div class="blockUI ' + opts.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (z + 10) + ';display:none;position:fixed">', 
                opts.title && (s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (opts.title || "&nbsp;") + "</div>"), 
                s += '<div class="ui-widget-content ui-dialog-content"></div>', s += "</div>") : opts.theme ? (s = '<div class="blockUI ' + opts.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (z + 10) + ';display:none;position:absolute">', 
                opts.title && (s += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (opts.title || "&nbsp;") + "</div>"), 
                s += '<div class="ui-widget-content ui-dialog-content"></div>', s += "</div>") : s = full ? '<div class="blockUI ' + opts.blockMsgClass + ' blockPage" style="z-index:' + (z + 10) + ';display:none;position:fixed"></div>' : '<div class="blockUI ' + opts.blockMsgClass + ' blockElement" style="z-index:' + (z + 10) + ';display:none;position:absolute"></div>', 
                lyr3 = $(s), msg && (opts.theme ? (lyr3.css(themedCSS), lyr3.addClass("ui-widget-content")) : lyr3.css(css)), 
                opts.theme || lyr2.css(opts.overlayCSS), lyr2.css("position", full ? "fixed" : "absolute"), 
                (msie || opts.forceIframe) && lyr1.css("opacity", 0);
                var layers = [ lyr1, lyr2, lyr3 ], $par = $(full ? "body" : el);
                $.each(layers, function() {
                    this.appendTo($par);
                }), opts.theme && opts.draggable && $.fn.draggable && lyr3.draggable({
                    handle: ".ui-dialog-titlebar",
                    cancel: "li"
                });
                var expr = setExpr && (!$.support.boxModel || $("object,embed", full ? null : el).length > 0);
                if (ie6 || expr) {
                    if (full && opts.allowBodyStretch && $.support.boxModel && $("html,body").css("height", "100%"), 
                    (ie6 || !$.support.boxModel) && !full) var t = sz(el, "borderTopWidth"), l = sz(el, "borderLeftWidth"), fixT = t ? "(0 - " + t + ")" : 0, fixL = l ? "(0 - " + l + ")" : 0;
                    $.each(layers, function(i, o) {
                        var s = o[0].style;
                        if (s.position = "absolute", 2 > i) full ? s.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:" + opts.quirksmodeOffsetHack + ') + "px"') : s.setExpression("height", 'this.parentNode.offsetHeight + "px"'), 
                        full ? s.setExpression("width", 'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"') : s.setExpression("width", 'this.parentNode.offsetWidth + "px"'), 
                        fixL && s.setExpression("left", fixL), fixT && s.setExpression("top", fixT); else if (opts.centerY) full && s.setExpression("top", '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'), 
                        s.marginTop = 0; else if (!opts.centerY && full) {
                            var top = opts.css && opts.css.top ? parseInt(opts.css.top, 10) : 0, expression = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + top + ') + "px"';
                            s.setExpression("top", expression);
                        }
                    });
                }
                if (msg && (opts.theme ? lyr3.find(".ui-widget-content").append(msg) : lyr3.append(msg), 
                (msg.jquery || msg.nodeType) && $(msg).show()), (msie || opts.forceIframe) && opts.showOverlay && lyr1.show(), 
                opts.fadeIn) {
                    var cb = opts.onBlock ? opts.onBlock : noOp, cb1 = opts.showOverlay && !msg ? cb : noOp, cb2 = msg ? cb : noOp;
                    opts.showOverlay && lyr2._fadeIn(opts.fadeIn, cb1), msg && lyr3._fadeIn(opts.fadeIn, cb2);
                } else opts.showOverlay && lyr2.show(), msg && lyr3.show(), opts.onBlock && opts.onBlock.bind(lyr3)();
                if (bind(1, el, opts), full ? (pageBlock = lyr3[0], pageBlockEls = $(opts.focusableElements, pageBlock), 
                opts.focusInput && setTimeout(focus, 20)) : center(lyr3[0], opts.centerX, opts.centerY), 
                opts.timeout) {
                    var to = setTimeout(function() {
                        full ? $.unblockUI(opts) : $(el).unblock(opts);
                    }, opts.timeout);
                    $(el).data("blockUI.timeout", to);
                }
            }
        }
        function remove(el, opts) {
            var count, full = el == window, $el = $(el), data = $el.data("blockUI.history"), to = $el.data("blockUI.timeout");
            to && (clearTimeout(to), $el.removeData("blockUI.timeout")), opts = $.extend({}, $.blockUI.defaults, opts || {}), 
            bind(0, el, opts), null === opts.onUnblock && (opts.onUnblock = $el.data("blockUI.onUnblock"), 
            $el.removeData("blockUI.onUnblock"));
            var els;
            els = full ? $("body").children().filter(".blockUI").add("body > .blockUI") : $el.find(">.blockUI"), 
            opts.cursorReset && (els.length > 1 && (els[1].style.cursor = opts.cursorReset), 
            els.length > 2 && (els[2].style.cursor = opts.cursorReset)), full && (pageBlock = pageBlockEls = null), 
            opts.fadeOut ? (count = els.length, els.stop().fadeOut(opts.fadeOut, function() {
                0 === --count && reset(els, data, opts, el);
            })) : reset(els, data, opts, el);
        }
        function reset(els, data, opts, el) {
            var $el = $(el);
            if (!$el.data("blockUI.isBlocked")) {
                els.each(function() {
                    this.parentNode && this.parentNode.removeChild(this);
                }), data && data.el && (data.el.style.display = data.display, data.el.style.position = data.position, 
                data.el.style.cursor = "default", data.parent && data.parent.appendChild(data.el), 
                $el.removeData("blockUI.history")), $el.data("blockUI.static") && $el.css("position", "static"), 
                "function" == typeof opts.onUnblock && opts.onUnblock(el, opts);
                var body = $(document.body), w = body.width(), cssW = body[0].style.width;
                body.width(w - 1).width(w), body[0].style.width = cssW;
            }
        }
        function bind(b, el, opts) {
            var full = el == window, $el = $(el);
            if ((b || (!full || pageBlock) && (full || $el.data("blockUI.isBlocked"))) && ($el.data("blockUI.isBlocked", b), 
            full && opts.bindEvents && (!b || opts.showOverlay))) {
                var events = "mousedown mouseup keydown keypress keyup touchstart touchend touchmove";
                b ? $(document).bind(events, opts, handler) : $(document).unbind(events, handler);
            }
        }
        function handler(e) {
            if ("keydown" === e.type && e.keyCode && 9 == e.keyCode && pageBlock && e.data.constrainTabKey) {
                var els = pageBlockEls, fwd = !e.shiftKey && e.target === els[els.length - 1], back = e.shiftKey && e.target === els[0];
                if (fwd || back) return setTimeout(function() {
                    focus(back);
                }, 10), !1;
            }
            var opts = e.data, target = $(e.target);
            return target.hasClass("blockOverlay") && opts.onOverlayClick && opts.onOverlayClick(e), 
            target.parents("div." + opts.blockMsgClass).length > 0 ? !0 : 0 === target.parents().children().filter("div.blockUI").length;
        }
        function focus(back) {
            if (pageBlockEls) {
                var e = pageBlockEls[back === !0 ? pageBlockEls.length - 1 : 0];
                e && e.focus();
            }
        }
        function center(el, x, y) {
            var p = el.parentNode, s = el.style, l = (p.offsetWidth - el.offsetWidth) / 2 - sz(p, "borderLeftWidth"), t = (p.offsetHeight - el.offsetHeight) / 2 - sz(p, "borderTopWidth");
            x && (s.left = l > 0 ? l + "px" : "0"), y && (s.top = t > 0 ? t + "px" : "0");
        }
        function sz(el, p) {
            return parseInt($.css(el, p), 10) || 0;
        }
        $.fn._fadeIn = $.fn.fadeIn;
        var noOp = $.noop || function() {}, msie = /MSIE/.test(navigator.userAgent), ie6 = /MSIE 6.0/.test(navigator.userAgent) && !/MSIE 8.0/.test(navigator.userAgent), setExpr = (document.documentMode || 0, 
        $.isFunction(document.createElement("div").style.setExpression));
        $.blockUI = function(opts) {
            install(window, opts);
        }, $.unblockUI = function(opts) {
            remove(window, opts);
        }, $.growlUI = function(title, message, timeout, onClose) {
            var $m = $('<div class="growlUI"></div>');
            title && $m.append("<h1>" + title + "</h1>"), message && $m.append("<h2>" + message + "</h2>"), 
            void 0 === timeout && (timeout = 3e3);
            var callBlock = function(opts) {
                opts = opts || {}, $.blockUI({
                    message: $m,
                    fadeIn: "undefined" != typeof opts.fadeIn ? opts.fadeIn : 700,
                    fadeOut: "undefined" != typeof opts.fadeOut ? opts.fadeOut : 1e3,
                    timeout: "undefined" != typeof opts.timeout ? opts.timeout : timeout,
                    centerY: !1,
                    showOverlay: !1,
                    onUnblock: onClose,
                    css: $.blockUI.defaults.growlCSS
                });
            };
            callBlock();
            $m.css("opacity");
            $m.mouseover(function() {
                callBlock({
                    fadeIn: 0,
                    timeout: 3e4
                });
                var displayBlock = $(".blockMsg");
                displayBlock.stop(), displayBlock.fadeTo(300, 1);
            }).mouseout(function() {
                $(".blockMsg").fadeOut(1e3);
            });
        }, $.fn.block = function(opts) {
            if (this[0] === window) return $.blockUI(opts), this;
            var fullOpts = $.extend({}, $.blockUI.defaults, opts || {});
            return this.each(function() {
                var $el = $(this);
                fullOpts.ignoreIfBlocked && $el.data("blockUI.isBlocked") || $el.unblock({
                    fadeOut: 0
                });
            }), this.each(function() {
                "static" == $.css(this, "position") && (this.style.position = "relative", $(this).data("blockUI.static", !0)), 
                this.style.zoom = 1, install(this, opts);
            });
        }, $.fn.unblock = function(opts) {
            return this[0] === window ? ($.unblockUI(opts), this) : this.each(function() {
                remove(this, opts);
            });
        }, $.blockUI.version = 2.7, $.blockUI.defaults = {
            message: "<h1>Please wait...</h1>",
            title: null,
            draggable: !0,
            theme: !1,
            css: {
                padding: 0,
                margin: 0,
                width: "30%",
                top: "40%",
                left: "35%",
                textAlign: "center",
                color: "#000",
                border: "3px solid #aaa",
                backgroundColor: "#fff",
                cursor: "wait"
            },
            themedCSS: {
                width: "30%",
                top: "40%",
                left: "35%"
            },
            overlayCSS: {
                backgroundColor: "#000",
                opacity: .6,
                cursor: "wait"
            },
            cursorReset: "default",
            growlCSS: {
                width: "350px",
                top: "10px",
                left: "",
                right: "10px",
                border: "none",
                padding: "5px",
                opacity: .6,
                cursor: "default",
                color: "#fff",
                backgroundColor: "#000",
                "-webkit-border-radius": "10px",
                "-moz-border-radius": "10px",
                "border-radius": "10px"
            },
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank",
            forceIframe: !1,
            baseZ: 1e3,
            centerX: !0,
            centerY: !0,
            allowBodyStretch: !0,
            bindEvents: !0,
            constrainTabKey: !0,
            fadeIn: 200,
            fadeOut: 400,
            timeout: 0,
            showOverlay: !0,
            focusInput: !0,
            focusableElements: ":input:enabled:visible",
            onBlock: null,
            onUnblock: null,
            onOverlayClick: null,
            quirksmodeOffsetHack: 4,
            blockMsgClass: "blockMsg",
            ignoreIfBlocked: !1
        };
        var pageBlock = null, pageBlockEls = [];
    }
    "function" == typeof define && define.amd && define.amd.jQuery ? define([ "jquery" ], setup) : setup(jQuery);
}(), function(window) {
    var HAS_HASHCHANGE = function() {
        var doc_mode = window.documentMode;
        return "onhashchange" in window && (void 0 === doc_mode || doc_mode > 7);
    }();
    L.Hash = function(map) {
        this.onHashChange = L.Util.bind(this.onHashChange, this), map && this.init(map);
    }, L.Hash.parseHash = function() {
        var params = getHashParams();
        if ("undefined" != typeof params.zoom || "undefined" != typeof params.lat || "undefined" != typeof params.lon) {
            var zoom = parseInt(params.zoom.values, 10), lat = parseFloat(params.lat.values), lon = parseFloat(params.lon.values);
            return isNaN(zoom) || isNaN(lat) || isNaN(lon) ? !1 : {
                center: new L.LatLng(lat, lon),
                zoom: zoom,
                params: params
            };
        }
        return !1;
    }, L.Hash.formatHash = function(map) {
        var center = map.getCenter(), zoom = map.getZoom(), precision = Math.max(0, Math.ceil(Math.log(zoom) / Math.LN2)), returnObj = {
            zoom: {
                values: zoom,
                comparator: "="
            },
            lat: {
                values: center.lat.toFixed(precision),
                comparator: "="
            },
            lon: {
                values: center.lng.toFixed(precision),
                comparator: "="
            }
        };
        return returnObj;
    }, L.Hash.prototype = {
        map: null,
        lastHash: null,
        parseHash: L.Hash.parseHash,
        formatHash: L.Hash.formatHash,
        init: function(map) {
            this.map = map, this.lastHash = null, this.onHashChange(), this.isListening || this.startListening();
        },
        removeFrom: function() {
            this.changeTimeout && clearTimeout(this.changeTimeout), this.isListening && this.stopListening(), 
            this.map = null;
        },
        onMapMove: function() {
            var hash;
            if (this.movingMap || !this.map._loaded) return !1;
            if (this.parseHash(hash)) {
                hash = getHashParams();
                var newParams = this.formatHash(this.map);
                _.each(newParams, function(val, key) {
                    hash[key].values = val.values, hash[key].comparator = "=";
                }), updateUrlHash(hash);
            } else hash = getHashParams(), _.extend(hash, this.formatHash(this.map)), updateUrlHash(hash);
            this.lastHash = hash;
        },
        movingMap: !1,
        update: function() {
            var hash = getHashParams();
            if (_.isEqual(hash, this.lastHash)) return !1;
            var parsed = this.parseHash(hash);
            parsed ? (this.movingMap = !0, this.map.setView(parsed.center, parsed.zoom), this.movingMap = !1) : this.onMapMove(this.map);
        },
        changeDefer: 200,
        changeTimeout: null,
        onHashChange: function() {
            if (!this.changeTimeout) {
                var that = this;
                this.changeTimeout = setTimeout(function() {
                    that.update(), that.changeTimeout = null;
                }, this.changeDefer);
            }
        },
        isListening: !1,
        hashChangeInterval: null,
        startListening: function() {
            this.map.on("moveend", this.onMapMove, this), HAS_HASHCHANGE ? L.DomEvent.addListener(window, "hashchange", this.onHashChange) : (clearInterval(this.hashChangeInterval), 
            this.hashChangeInterval = setInterval(this.onHashChange, 500)), this.isListening = !0;
        },
        stopListening: function() {
            this.map.off("moveend", this.onMapMove, this), HAS_HASHCHANGE ? L.DomEvent.removeListener(window, "hashchange", this.onHashChange) : clearInterval(this.hashChangeInterval), 
            this.isListening = !1;
        }
    }, L.hash = function(map) {
        return new L.Hash(map);
    }, L.Map.prototype.addHash = function() {
        this._hash = L.hash(this);
    }, L.Map.prototype.removeHash = function() {
        this._hash.removeFrom();
    };
}(window), L.Rrose = L.Popup.extend({
    _initLayout: function() {
        var closeButton, wrapper, prefix = "leaflet-rrose", container = this._container = L.DomUtil.create("div", prefix + " " + this.options.className + " leaflet-zoom-animated");
        this.options.closeButton && (closeButton = this._closeButton = L.DomUtil.create("a", prefix + "-close-button", container), 
        closeButton.href = "#close", closeButton.innerHTML = "&#215;", L.DomEvent.on(closeButton, "click", this._onCloseButtonClick, this));
        var x_bound = 80, y_bound = 80;
        this.options.position = "n";
        var y_diff = y_bound - this._map.latLngToContainerPoint(this._latlng).y;
        y_diff > 0 && (this.options.position = "s");
        var x_diff = this._map.latLngToContainerPoint(this._latlng).x - (this._map.getSize().x - x_bound);
        x_diff > 0 ? this.options.position += "w" : (x_diff = x_bound - this._map.latLngToContainerPoint(this._latlng).x, 
        x_diff > 0 && (this.options.position += "e")), 2 === this.options.position.length && (this.options.position = y_diff > x_diff ? this.options.position.charAt(0) + this.options.position : this.options.position.charAt(1) + this.options.position), 
        /s/.test(this.options.position) ? ("s" === this.options.position ? (this._tipContainer = L.DomUtil.create("div", prefix + "-tip-container", container), 
        wrapper = this._wrapper = L.DomUtil.create("div", prefix + "-content-wrapper", container)) : (this._tipContainer = L.DomUtil.create("div", prefix + "-tip-container " + prefix + "-tip-container-" + this.options.position, container), 
        wrapper = this._wrapper = L.DomUtil.create("div", prefix + "-content-wrapper " + prefix + "-content-wrapper-" + this.options.position, container)), 
        this._tip = L.DomUtil.create("div", prefix + "-tip " + prefix + "-tip-" + this.options.position, this._tipContainer), 
        L.DomEvent.disableClickPropagation(wrapper), this._contentNode = L.DomUtil.create("div", prefix + "-content", wrapper), 
        L.DomEvent.on(this._contentNode, "mousewheel", L.DomEvent.stopPropagation)) : ("n" === this.options.position ? (wrapper = this._wrapper = L.DomUtil.create("div", prefix + "-content-wrapper", container), 
        this._tipContainer = L.DomUtil.create("div", prefix + "-tip-container", container)) : (wrapper = this._wrapper = L.DomUtil.create("div", prefix + "-content-wrapper " + prefix + "-content-wrapper-" + this.options.position, container), 
        this._tipContainer = L.DomUtil.create("div", prefix + "-tip-container " + prefix + "-tip-container-" + this.options.position, container)), 
        L.DomEvent.disableClickPropagation(wrapper), this._contentNode = L.DomUtil.create("div", prefix + "-content", wrapper), 
        L.DomEvent.on(this._contentNode, "mousewheel", L.DomEvent.stopPropagation), this._tip = L.DomUtil.create("div", prefix + "-tip " + prefix + "-tip-" + this.options.position, this._tipContainer));
    },
    _updatePosition: function() {
        var pos = this._map.latLngToLayerPoint(this._latlng), is3d = L.Browser.any3d, offset = this.options.offset;
        is3d && L.DomUtil.setPosition(this._container, pos), this._containerBottom = /s/.test(this.options.position) ? -this._container.offsetHeight + offset.y - (is3d ? 0 : pos.y) : -offset.y - (is3d ? 0 : pos.y), 
        this._containerLeft = /e/.test(this.options.position) ? offset.x + (is3d ? 0 : pos.x) : /w/.test(this.options.position) ? -Math.round(this._containerWidth) + offset.x + (is3d ? 0 : pos.x) : -Math.round(this._containerWidth / 2) + offset.x + (is3d ? 0 : pos.x), 
        this._container.style.bottom = this._containerBottom + "px", this._container.style.left = this._containerLeft + "px";
    }
}), L.Control.MiniMap = L.Control.extend({
    options: {
        position: "bottomright",
        toggleDisplay: !1,
        zoomLevelOffset: -5,
        zoomLevelFixed: !1,
        zoomAnimation: !1,
        autoToggleDisplay: !1,
        width: 150,
        height: 150,
        collapsedWidth: 19,
        collapsedHeight: 19,
        aimingRectOptions: {
            color: "#ff7800",
            weight: 1,
            clickable: !1
        },
        shadowRectOptions: {
            color: "#000000",
            weight: 1,
            clickable: !1,
            opacity: 0,
            fillOpacity: 0
        }
    },
    hideText: "Hide MiniMap",
    showText: "Show MiniMap",
    initialize: function(layer, options) {
        L.Util.setOptions(this, options), this.options.aimingRectOptions.clickable = !1, 
        this.options.shadowRectOptions.clickable = !1, this._layer = layer;
    },
    onAdd: function(map) {
        return this._mainMap = map, this._container = L.DomUtil.create("div", "leaflet-control-minimap"), 
        this._container.style.width = this.options.width + "px", this._container.style.height = this.options.height + "px", 
        L.DomEvent.disableClickPropagation(this._container), L.DomEvent.on(this._container, "mousewheel", L.DomEvent.stopPropagation), 
        this._miniMap = new L.Map(this._container, {
            attributionControl: !1,
            zoomControl: !1,
            zoomAnimation: this.options.zoomAnimation,
            autoToggleDisplay: this.options.autoToggleDisplay,
            touchZoom: !this.options.zoomLevelFixed,
            scrollWheelZoom: !this.options.zoomLevelFixed,
            doubleClickZoom: !this.options.zoomLevelFixed,
            boxZoom: !this.options.zoomLevelFixed,
            crs: map.options.crs
        }), this._miniMap.addLayer(this._layer), this._mainMapMoving = !1, this._miniMapMoving = !1, 
        this._userToggledDisplay = !1, this._minimized = !1, this.options.toggleDisplay && this._addToggleButton(), 
        this._miniMap.whenReady(L.Util.bind(function() {
            this._aimingRect = L.rectangle(this._mainMap.getBounds(), this.options.aimingRectOptions).addTo(this._miniMap), 
            this._shadowRect = L.rectangle(this._mainMap.getBounds(), this.options.shadowRectOptions).addTo(this._miniMap), 
            this._mainMap.on("moveend", this._onMainMapMoved, this), this._mainMap.on("move", this._onMainMapMoving, this), 
            this._miniMap.on("movestart", this._onMiniMapMoveStarted, this), this._miniMap.on("move", this._onMiniMapMoving, this), 
            this._miniMap.on("moveend", this._onMiniMapMoved, this);
        }, this)), this._container;
    },
    addTo: function(map) {
        return L.Control.prototype.addTo.call(this, map), this._miniMap.setView(this._mainMap.getCenter(), this._decideZoom(!0)), 
        this._setDisplay(this._decideMinimized()), this;
    },
    onRemove: function() {
        this._mainMap.off("moveend", this._onMainMapMoved, this), this._mainMap.off("move", this._onMainMapMoving, this), 
        this._miniMap.off("moveend", this._onMiniMapMoved, this), this._miniMap.removeLayer(this._layer);
    },
    changeLayer: function(layer) {
        this._miniMap.removeLayer(this._layer), this._layer = layer, this._miniMap.addLayer(this._layer);
    },
    _addToggleButton: function() {
        this._toggleDisplayButton = this.options.toggleDisplay ? this._createButton("", this.hideText, "leaflet-control-minimap-toggle-display leaflet-control-minimap-toggle-display-" + this.options.position, this._container, this._toggleDisplayButtonClicked, this) : void 0, 
        this._toggleDisplayButton.style.width = this.options.collapsedWidth + "px", this._toggleDisplayButton.style.height = this.options.collapsedHeight + "px";
    },
    _createButton: function(html, title, className, container, fn, context) {
        var link = L.DomUtil.create("a", className, container);
        link.innerHTML = html, link.href = "#", link.title = title;
        var stop = L.DomEvent.stopPropagation;
        return L.DomEvent.on(link, "click", stop).on(link, "mousedown", stop).on(link, "dblclick", stop).on(link, "click", L.DomEvent.preventDefault).on(link, "click", fn, context), 
        link;
    },
    _toggleDisplayButtonClicked: function() {
        this._userToggledDisplay = !0, this._minimized ? (this._restore(), this._toggleDisplayButton.title = this.hideText) : (this._minimize(), 
        this._toggleDisplayButton.title = this.showText);
    },
    _setDisplay: function(minimize) {
        minimize != this._minimized && (this._minimized ? this._restore() : this._minimize());
    },
    _minimize: function() {
        this.options.toggleDisplay ? (this._container.style.width = this.options.collapsedWidth + "px", 
        this._container.style.height = this.options.collapsedHeight + "px", this._toggleDisplayButton.className += " minimized-" + this.options.position) : this._container.style.display = "none", 
        this._minimized = !0;
    },
    _restore: function() {
        this.options.toggleDisplay ? (this._container.style.width = this.options.width + "px", 
        this._container.style.height = this.options.height + "px", this._toggleDisplayButton.className = this._toggleDisplayButton.className.replace("minimized-" + this.options.position, "")) : this._container.style.display = "block", 
        this._minimized = !1;
    },
    _onMainMapMoved: function() {
        this._miniMapMoving ? this._miniMapMoving = !1 : (this._mainMapMoving = !0, this._miniMap.setView(this._mainMap.getCenter(), this._decideZoom(!0)), 
        this._setDisplay(this._decideMinimized())), this._aimingRect.setBounds(this._mainMap.getBounds());
    },
    _onMainMapMoving: function() {
        this._aimingRect.setBounds(this._mainMap.getBounds());
    },
    _onMiniMapMoveStarted: function() {
        var lastAimingRect = this._aimingRect.getBounds(), sw = this._miniMap.latLngToContainerPoint(lastAimingRect.getSouthWest()), ne = this._miniMap.latLngToContainerPoint(lastAimingRect.getNorthEast());
        this._lastAimingRectPosition = {
            sw: sw,
            ne: ne
        };
    },
    _onMiniMapMoving: function() {
        !this._mainMapMoving && this._lastAimingRectPosition && (this._shadowRect.setBounds(new L.LatLngBounds(this._miniMap.containerPointToLatLng(this._lastAimingRectPosition.sw), this._miniMap.containerPointToLatLng(this._lastAimingRectPosition.ne))), 
        this._shadowRect.setStyle({
            opacity: 1,
            fillOpacity: .3
        }));
    },
    _onMiniMapMoved: function() {
        this._mainMapMoving ? this._mainMapMoving = !1 : (this._miniMapMoving = !0, this._mainMap.setView(this._miniMap.getCenter(), this._decideZoom(!1)), 
        this._shadowRect.setStyle({
            opacity: 0,
            fillOpacity: 0
        }));
    },
    _decideZoom: function(fromMaintoMini) {
        if (this.options.zoomLevelFixed) return fromMaintoMini ? this.options.zoomLevelFixed : this._mainMap.getZoom();
        if (fromMaintoMini) return this._mainMap.getZoom() + this.options.zoomLevelOffset;
        var toRet, currentDiff = this._miniMap.getZoom() - this._mainMap.getZoom(), proposedZoom = this._miniMap.getZoom() - this.options.zoomLevelOffset;
        return currentDiff > this.options.zoomLevelOffset && this._mainMap.getZoom() < this._miniMap.getMinZoom() - this.options.zoomLevelOffset ? this._miniMap.getZoom() > this._lastMiniMapZoom ? (toRet = this._mainMap.getZoom() + 1, 
        this._miniMap.setZoom(this._miniMap.getZoom() - 1)) : toRet = this._mainMap.getZoom() : toRet = proposedZoom, 
        this._lastMiniMapZoom = this._miniMap.getZoom(), toRet;
    },
    _decideMinimized: function() {
        return this._userToggledDisplay ? this._minimized : this.options.autoToggleDisplay ? this._mainMap.getBounds().contains(this._miniMap.getBounds()) ? !0 : !1 : this._minimized;
    }
}), L.Map.mergeOptions({
    miniMapControl: !1
}), L.Map.addInitHook(function() {
    this.options.miniMapControl && (this.miniMapControl = new L.Control.MiniMap().addTo(this));
}), L.control.minimap = function(layer, options) {
    return new L.Control.MiniMap(layer, options);
};